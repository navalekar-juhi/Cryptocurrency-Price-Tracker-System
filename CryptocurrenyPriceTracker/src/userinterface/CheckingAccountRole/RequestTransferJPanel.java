/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CheckingAccountRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.SavingsAccountOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ToCheckingTransferRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author poojahiremath
 */
public class RequestTransferJPanel extends javax.swing.JPanel {
     JPanel userProcessContainer; 
UserAccount account; 
EcoSystem ecosystem;
Enterprise enterprise;
Organization organization;

    /**
     * Creates new form RequestTransferJPanel
     */
    public RequestTransferJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem,Enterprise enterprise,Organization organization) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account= account;
        this.ecosystem = ecosystem;
        this.enterprise=enterprise;
        this.organization=organization;
        populateRequestTable1();
    }
    public void populateRequestTable1(){
        DefaultTableModel model = (DefaultTableModel) transferRequestJTable.getModel();
      
        
        model.setRowCount(0);
        System.out.println(""+account.getWorkQueue().getWorkRequestList());
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            System.out.println("outside if");
            if(request instanceof ToCheckingTransferRequest ){
                 System.out.println("inside if");
                
            Object[] row = new Object[4];
           // row[0] = request.getMessage();
            System.out.println(request);
            row[0]=((ToCheckingTransferRequest)request).getBalance();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            
              String result = ((ToCheckingTransferRequest)request).getTestResult();
             
            row[3] = result == null ? "Waiting" : result;
            
            
            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRequestDeal = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        transferRequestJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 153, 153));

        btnRequestDeal.setBackground(new java.awt.Color(255, 255, 255));
        btnRequestDeal.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnRequestDeal.setForeground(new java.awt.Color(0, 153, 153));
        btnRequestDeal.setText("Request Deal");
        btnRequestDeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestDealActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(255, 255, 255));
        btnRefresh.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(0, 153, 153));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        transferRequestJTable.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        transferRequestJTable.setForeground(new java.awt.Color(0, 153, 153));
        transferRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transferRequestJTable);
        if (transferRequestJTable.getColumnModel().getColumnCount() > 0) {
            transferRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            transferRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            transferRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 153, 153));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRefresh)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRequestDeal)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnRefresh)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btnRequestDeal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestDealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestDealActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestToSavingsJPanel", new RequestToSavingsJPanel(userProcessContainer, account, ecosystem,(SavingsAccountOrganization)organization,enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnRequestDealActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateRequestTable1();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRequestDeal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable transferRequestJTable;
    // End of variables declaration//GEN-END:variables
}
