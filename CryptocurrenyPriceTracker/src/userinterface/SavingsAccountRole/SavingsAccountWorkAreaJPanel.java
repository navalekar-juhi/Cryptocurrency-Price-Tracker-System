/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SavingsAccountRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.AdvisoryOrganization;
import Business.Organization.SavingsAccountOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdviceWorkRequest;
import Business.WorkQueue.SavingAccountWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.AdvisoryRole.ProcessAdviceJPanel;

/**
 *
 * @author poojahiremath
 */
public class SavingsAccountWorkAreaJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private EcoSystem ecosystem;
private UserAccount account;
private Organization accountOrganization;
private Enterprise enterprise;
    // private static int count=1000000;


    /**
     * Creates new form AccountWorkAreaJPanel
     */
    public SavingsAccountWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem ecosystem,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecosystem = ecosystem;
        this.accountOrganization = organization;
        this.enterprise=enterprise;
       populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSavingsAccountRequest = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRefresh.setBackground(new java.awt.Color(255, 255, 255));
        btnRefresh.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(0, 153, 153));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 37, -1, -1));

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 153, 153));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 559, -1, -1));

        tblSavingsAccountRequest.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        tblSavingsAccountRequest.setForeground(new java.awt.Color(0, 153, 153));
        tblSavingsAccountRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Request Date", "Network", "Enterprise", "Message", "Receiver", "Status", "CustomerName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSavingsAccountRequest);
        if (tblSavingsAccountRequest.getColumnModel().getColumnCount() > 0) {
            tblSavingsAccountRequest.getColumnModel().getColumn(0).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(1).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(2).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(3).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(4).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(5).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(6).setResizable(false);
            tblSavingsAccountRequest.getColumnModel().getColumn(7).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 93, 717, 175));

        btnAssign.setBackground(new java.awt.Color(255, 255, 255));
        btnAssign.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(0, 153, 153));
        btnAssign.setText("AssignToMe");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 323, -1, -1));

        btnProcess.setBackground(new java.awt.Color(255, 255, 255));
        btnProcess.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnProcess.setForeground(new java.awt.Color(0, 153, 153));
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 323, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    public void populateTable(){
    DefaultTableModel model = (DefaultTableModel) tblSavingsAccountRequest.getModel();
        
  
        Organization found = null;
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof SavingsAccountOrganization) {
                found = o;
                break;
            }
        }
    
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        model.setRowCount(0);
        for (WorkRequest wr : found.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof SavingAccountWorkRequest && (wr.getReceiver() == null || wr.getReceiver() == account)) {
                SavingAccountWorkRequest awr = (SavingAccountWorkRequest) wr;
                Object[] row = new Object[8];
                row[0] = awr;
                row[1]=sdf.format(awr.getRequestDate());
                row[2]=awr.getsNetwork();
                row[3]=awr.getsEnterprise();
                row[4] = awr.getsMessage();
                UserAccount r = awr.getReceiver();
                row[5] = r != null ? r : "";
                row[6]=awr.getStatus();
                row[7] = awr.getSender().getUsername();
                
          
                
                //row[5]=awr.getResolveDate() != null ?  sdf.format(awr.getResolveDate()): "";
                
                model.addRow(row);
            }
        }
    
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblSavingsAccountRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a request first");
        } else {
            SavingAccountWorkRequest awr = (SavingAccountWorkRequest) tblSavingsAccountRequest.getValueAt(selectedRow, 0);
            awr.setReceiver(account);
            JOptionPane.showMessageDialog(null, "Request assigned successfully");
            populateTable();
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        System.out.println("Request for saving account creation is being processed");
        int selectedRow = tblSavingsAccountRequest.getSelectedRow();

        if (tblSavingsAccountRequest.getValueAt(selectedRow, 5).toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please assign the selected request.");
            return;

        }

        else if ((selectedRow >= 0) && !(tblSavingsAccountRequest.getValueAt(selectedRow, 5)).toString().isEmpty())  {
            SavingAccountWorkRequest request = (SavingAccountWorkRequest) tblSavingsAccountRequest.getValueAt(selectedRow, 0);

            request.setStatus("Processing");

            ProcessSavingsAccountRequestJPanel panel = new ProcessSavingsAccountRequestJPanel(userProcessContainer, request,ecosystem);
            userProcessContainer.add("ProcessAdviceJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

        } else {
            JOptionPane.showMessageDialog(null, "Please select a request message to process.");
            return;
        }
        
      
       
        
    }//GEN-LAST:event_btnProcessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSavingsAccountRequest;
    // End of variables declaration//GEN-END:variables
}
