/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Account.Account;
import Business.Coins.Coins;
import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PrivateBroker;
import Business.Investment.Investment;
import Business.Network.Network;
import Business.Organization.FinancialServiceOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SellCoinsWorkRequest;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pramathesh Navalekar
 */
public class SellCoinsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecosystem;
    private Customer c;

    /**
     * Creates new form SellCoinsJPanel
     */
    public SellCoinsJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecosystem = ecosystem;
        this.c = ecosystem.getCustomerDirectory().searchCustomer(account.getUsername());
        populateTable();
        populateBank();
        populateNetworks();
        cmbNetwork.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                populateEnterprise((Network) cmbNetwork.getSelectedItem());

            }
        });

    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblSellCoins.getModel();

        model.setRowCount(0);
        //Customer c = (Customer) ecosystem.getCustomerDirectory().searchCustomer(account.getUsername());

        for (Investment item : c.getCoinDetails()) {
            Object[] row = new Object[3];
            Coins coin = item.getCoin();
            row[0] = item;
            row[1] = coin.getdPrice();
            row[2] = item.getQuantity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSellCoins = new javax.swing.JTable();
        btnSellRequest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbNetwork = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbEnterprise = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmbBank = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCoinSymbol = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtSellQuantity = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Sell Coins");

        tblSellCoins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coin Symbol", "Price", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(tblSellCoins);

        btnSellRequest.setForeground(new java.awt.Color(0, 153, 153));
        btnSellRequest.setText("Sell Request");
        btnSellRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellRequestActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Network:");

        cmbNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetworkActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Enterprise:");

        cmbEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnterpriseActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Bank:");

        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Coin:");

        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Price:");

        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("Sell Quantity:");

        txtCoinSymbol.setEditable(false);
        txtCoinSymbol.setEnabled(false);

        txtPrice.setEditable(false);
        txtPrice.setEnabled(false);

        btnView.setBackground(new java.awt.Color(255, 255, 255));
        btnView.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnView.setForeground(new java.awt.Color(0, 153, 153));
        btnView.setText("View Data");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(70, 70, 70)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cmbNetwork, 0, 92, Short.MAX_VALUE)
                                                .addComponent(txtPrice)
                                                .addComponent(txtCoinSymbol)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addComponent(btnView)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(75, 75, 75)
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbBank, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtSellQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(251, 251, 251)
                            .addComponent(jLabel1)
                            .addGap(174, 174, 174)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnSellRequest)))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCoinSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtSellQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(btnSellRequest)
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSellRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellRequestActionPerformed
        // TODO add your handling code here:
        if (txtSellQuantity.getText().equals("") == false) {
            try {
        SellCoinsWorkRequest swr = new SellCoinsWorkRequest();
        double amount;
        amount = (Integer.parseInt(txtSellQuantity.getText()))*(Double.parseDouble(txtPrice.getText()));
        swr.setdAmount(amount);
        swr.setsNetwork(cmbNetwork.getSelectedItem().toString());
        swr.setsEnterprise(cmbEnterprise.getSelectedItem().toString());
        swr.setSender(account);
        swr.setRequestDate(new Date());
        swr.setStatus("Requested");
        swr.setCustomerAccount(cmbBank.getSelectedItem().toString());
        swr.getSellCoins().getCoin().setSymbol(txtCoinSymbol.getText());
        swr.getSellCoins().getCoin().setdPrice(Double.parseDouble(txtPrice.getText()));
        swr.getSellCoins().setQuantity(Integer.parseInt(txtSellQuantity.getText()));
        swr.getSellCoins().setdPrice(Double.parseDouble(txtPrice.getText()));
        Network n = (Network) cmbNetwork.getSelectedItem();
        Enterprise e = (Enterprise) cmbEnterprise.getSelectedItem();
        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof FinancialServiceOrganization) {
                o.getWorkQueue().getWorkRequestList().add(swr);
            }
        }
        account.getWorkQueue().getWorkRequestList().add(swr);
        JOptionPane.showMessageDialog(null, "Request message sent");
        } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please enter correct values");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter values");
            return;
        }
        System.out.println("Sell coins sent to financial organization of enterprise");
    }//GEN-LAST:event_btnSellRequestActionPerformed

    private void cmbNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetworkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNetworkActionPerformed
    private void populateNetworks() {
        //get a list of networks from network directory
        for (Network n : ecosystem.getNetworkList()) {
            cmbNetwork.addItem(n);
        }

    }
    private void cmbEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnterpriseActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbEnterpriseActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblSellCoins.getSelectedRow();

        if (selectedrow >= 0) {
        Investment invest = (Investment)tblSellCoins.getValueAt(selectedrow, 0);
        txtCoinSymbol.setText(invest.getCoin().getSymbol());
        txtPrice.setText(String.valueOf(invest.getCoin().getdPrice()));    
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row");
        }
    }//GEN-LAST:event_btnViewActionPerformed
    private void populateEnterprise(Network n) {
        //get list of enterprise under the network who can advice which is investment bank or private broker
        cmbEnterprise.removeAllItems();
        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            if ((e instanceof PrivateBroker)) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof FinancialServiceOrganization) {
                        cmbEnterprise.addItem(e);
                    }
                }
            }
        }
    }

    private void populateBank() {
    Customer c = ecosystem.getCustomerDirectory().searchCustomer(account.getUsername());
    for (Account a:c.getAccountList())
        if(a.getType().matches("Checking")){
        cmbBank.addItem(a.getBankName());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSellRequest;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cmbBank;
    private javax.swing.JComboBox cmbEnterprise;
    private javax.swing.JComboBox cmbNetwork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSellCoins;
    private javax.swing.JTextField txtCoinSymbol;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSellQuantity;
    // End of variables declaration//GEN-END:variables
}
