/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Coins.Coins;
import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Investment.Investment;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdviceWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pramathesh Navalekar
 */
public class ViewAdviceJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private AdviceWorkRequest awr;
private UserAccount account;
private EcoSystem ecosystem;
    /**
     * Creates new form ViewAdviceJPanel
     */
    public ViewAdviceJPanel(JPanel userProcessContainer,AdviceWorkRequest awr, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.awr = awr;
        account = awr.getSender();
        this.ecosystem= ecosystem;
        populateSuggestedTable();
    }
    public void populateSuggestedTable() {
        DefaultTableModel model = (DefaultTableModel) tblSuggestion.getModel();

        model.setRowCount(0);
        for (Investment i : awr.getSuggInvestList()) {
            Object[] row = new Object[4];
            Coins s = i.getCoin();
            row[0] = s;
            row[1] = s.getdPrice();
            row[2] = i.getQuantity();
            row[3] = i.investmentAmount();
           model.addRow(row);
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSuggestion = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFutureInvest = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblSuggestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coin Type", "Price", "Quantity", "Amount"
            }
        ));
        jScrollPane1.setViewportView(tblSuggestion);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Suggested Investment");

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setForeground(new java.awt.Color(0, 153, 153));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblFutureInvest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coin Type", "Price", "Quantity", "Amount"
            }
        ));
        jScrollPane2.setViewportView(tblFutureInvest);

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setForeground(new java.awt.Color(0, 153, 153));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setForeground(new java.awt.Color(0, 153, 153));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBack)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(160, 160, 160)))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSuggestion.getSelectedRow();
            
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a coin to add first", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
                //if (!investPresent((Investment) tblSuggestion.getValueAt(selectedRow, 0))){
                DefaultTableModel model = (DefaultTableModel) tblFutureInvest.getModel();
                Object[] row = new Object[4];
                for (int i = 0; i < 4; i++) {
                    row[i] = tblSuggestion.getValueAt(selectedRow, i);
                }
                model.addRow(row);
                //}
                //else{
                //JOptionPane.showMessageDialog(null, "Coins already present in future investment list", "Information", JOptionPane.INFORMATION_MESSAGE);
                //}
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Customer c = (Customer) ecosystem.getCustomerDirectory().searchCustomer(account.getUsername());
        c.getFutureInvestment().clear();
        for (int i = 0; i < tblFutureInvest.getRowCount(); i++) {
            Investment item = new Investment();
            item.setCoin((Coins)tblFutureInvest.getValueAt(i, 0));
            item.setdPrice((Double) tblFutureInvest.getValueAt(i, 1));
            item.setQuantity((Integer)tblFutureInvest.getValueAt(i, 2));
            c.getFutureInvestment().add(item);
        }
        JOptionPane.showMessageDialog(null, "Data saved successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
        System.out.println("Data saved for future investments");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

//      private boolean investPresent(Investment i) {
//        for (int j = 0; j < tblFutureInvest.getRowCount(); j++) {
//            if (((Investment) tblFutureInvest.getValueAt(j, 0)).equals(i.getCoin().getCryptoCoinName())) {
//                return true;
//            }
//        }
//        return false;
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblFutureInvest;
    private javax.swing.JTable tblSuggestion;
    // End of variables declaration//GEN-END:variables
}
